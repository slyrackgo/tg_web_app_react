import React, { useState, useCallback, useEffect } from 'react';
import './ProductList.css';
import ProductItem from '../ProductItem/ProductItem';
import { useTelegram } from '../../hooks/useTelegram';

import pantsImg from '../../img/batnik1.png';
import shirtImg from '../../img/batnik2.png';
import cardiganImg from '../../img/batnik3.png';
import shoesImg from '../../img/batnik4.png';

const products = [
    {
        id: '1',
        title: '–ë—Ä—é–∫–∏',
        price: 3600,
        description: '–®–∏–∫–∞—Ä–Ω—ã–µ –±—Ä—é–∫–∏ –≤ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–º —Å—Ç–∏–ª–µ',
        image: pantsImg
    },
    {
        id: '2',
        title: '–ë–∞—Ç–Ω–∏–∫–∏',
        price: 2000,
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π –±–∞—Ç–Ω–∏–∫ –∏–¥—É—â–∏–π –≤ —Å—Ç–∏–ª–µ old money, –µ–≥–æ —Å—Ç–∏–ª—å–Ω—ã–π –≤–æ—Ä–æ—Ç–Ω–∏–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–∑—É —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏ –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏.',
        image: shirtImg
    },
    {
        id: '3',
        title: '–ö–∞—Ä–¥–∏–≥–∞–Ω—ã',
        price: 3900,
        description: '–û—á–µ–Ω—å —Ç–µ–ø–ª—ã–π –∏ –º—è–≥–∫–∏–π, –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –∂–∏–∑–Ω–∏, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∏–¥—ë—Ç –¢—É—Ä—Ü–∏—è',
        image: cardiganImg
    },
    {
        id: '4',
        title: '–û–±—É–≤—å',
        price: 8200,
        description: '–õ–æ—Ñ–µ—Ä—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º, –±–æ–≥–∞—Ç–æ–º –æ—Ç—Ç–µ–Ω–∫–µ',
        image: shoesImg
    }
];

const getTotalPrice = (itemsMap) => {
    return Object.values(itemsMap).reduce((acc, item) => {
        return acc + item.product.price * item.quantity;
    }, 0);
};

const ProductList = () => {
    const [cartItems, setCartItems] = useState({});
    const { tg, queryId } = useTelegram();
    const navigate = useNavigate(); // üëà to navigate back

    const onSendData = useCallback(() => {
        const itemsArray = Object.values(cartItems).map(item => ({
            ...item.product,
            quantity: item.quantity
        }));

        const data = {
            products: itemsArray,
            totalPrice: getTotalPrice(cartItems),
            queryId,
        };

        fetch('http://85.119.146.179:8000/web-data', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        });
    }, [cartItems, queryId]);

    useEffect(() => {
        tg.onEvent('mainButtonClicked', onSendData);
        return () => {
            tg.offEvent('mainButtonClicked', onSendData);
        };
    }, [onSendData, tg]);

    const updateMainButton = (items) => {
        const total = getTotalPrice(items);
        if (total === 0) {
            tg.MainButton.hide();
        } else {
            tg.MainButton.show();
            tg.MainButton.setParams({
                text: `–ö—É–ø–∏—Ç—å –Ω–∞ ${total} —Å–æ–º`
            });
        }
    };

    const onAdd = (product) => {
        setCartItems(prev => {
            const newItems = { ...prev };
            if (newItems[product.id]) {
                newItems[product.id].quantity += 1;
            } else {
                newItems[product.id] = { product, quantity: 1 };
            }
            updateMainButton(newItems);
            return newItems;
        });
    };

    const onRemove = (product) => {
        setCartItems(prev => {
            const newItems = { ...prev };
            if (newItems[product.id]) {
                newItems[product.id].quantity -= 1;
                if (newItems[product.id].quantity <= 0) {
                    delete newItems[product.id];
                }
            }
            updateMainButton(newItems);
            return newItems;
        });
    };

    const getQuantity = (productId) => {
        return cartItems[productId]?.quantity || 0;
    };

    return (
        <div className={'list'}>
            <button
                onClick={() => navigate(-1)}
                className="back-button"
            >
                ‚Üê –ù–∞–∑–∞–¥
            </button>

            {products.map(item => (
                <ProductItem
                    key={item.id}
                    product={item}
                    onAdd={onAdd}
                    onRemove={onRemove}
                    quantity={getQuantity(item.id)}
                    className={'item'}
                />
            ))}
        </div>
    );
};

export default ProductList;